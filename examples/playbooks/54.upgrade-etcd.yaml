# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

---
- name: Upgrade etcd
  hosts: master,etcd
  serial: 1
  become: true
  vars:
    etcd_address: "{{ ansible_host }}"
  roles:
    - etcd
  tags:
    - etcd

- name: Etcd certificates renewal
  hosts: master,etcd
  vars:
    etcd_certs:
      - etcd/ca.crt
      - apiserver-etcd-client.crt
      - apiserver-etcd-client.key
  tasks:
    - name: Ensure rsync is installed
      package:
        name:
          - rsync
        state: latest

    - name: Backup etcd certs
      shell: |
        BCK_FOLDER=$HOME/certs-backup/$(date +%Y-%m-%d_%H-%M-%S)
        mkdir -p $BCK_FOLDER/etc-etcd-pki
        rsync -av /etc/etcd/pki/ $BCK_FOLDER/etc-etcd-pki

    - name: Renewing etcd certificates
      command: "{{ item }}"
      loop:
        - "kubeadm certs renew --cert-dir=/etc/etcd/pki apiserver-etcd-client --config=/etc/etcd/kubeadm-etcd.yml"
        - "kubeadm certs renew --cert-dir=/etc/etcd/pki etcd-healthcheck-client --config=/etc/etcd/kubeadm-etcd.yml"
        - "kubeadm certs renew --cert-dir=/etc/etcd/pki etcd-peer --config=/etc/etcd/kubeadm-etcd.yml"
        - "kubeadm certs renew --cert-dir=/etc/etcd/pki etcd-server --config=/etc/etcd/kubeadm-etcd.yml"

    - name: Restarting etcd service
      systemd:
        name: etcd
        daemon_reload: yes
        state: restarted

# When etcd cluster runs on dedicated nodes, the "Distribute etcd certificates from etcd to control plane nodes"
# and "Kubeadm package upgrade on etcd nodes" plays must be executed to copy the etcd
# certificates to the control plane nodes and upgrade the kubeadm package.
- name: Distribute etcd certificates from etcd to control plane nodes
  hosts: etcd
  become: true
  vars:
    etcd_certs:
      - etcd/ca.crt
      - apiserver-etcd-client.crt
      - apiserver-etcd-client.key
  tasks:
    - name: Fetching certificates from etcd
      run_once: true
      delegate_to: "{{ groups.etcd[0] }}"
      fetch:
        src: "/etc/etcd/pki/{{ item }}"
        dest: "/tmp/etcd-certs/"
        flat: yes
      with_items: "{{ etcd_certs }}"
      when: not etcd_on_control_plane | bool
    - name: Copying certificates to control plane nodes
      run_once: true
      copy:
        src: "/tmp/etcd-certs/{{ item[1] | basename }}"
        dest: "/etc/etcd/pki/{{ item[1] }}"
        owner: root
        group: root
        mode: '0640'
      loop: "{{ groups['master'] | product(etcd_certs) | list }}"
      loop_control:
        loop_var: item
      vars:
        master: "{{ item[0] }}"
        cert: "{{ item[1] }}"
      delegate_to: "{{ item[0] }}"
      when: not etcd_on_control_plane | bool

    - name: Cleaning up temporary certificates
      run_once: true
      become: false
      delegate_to: localhost
      file:
        path: /tmp/etcd-certs
        state: absent
      when: not etcd_on_control_plane | bool

- name: Kubeadm package upgrade on etcd nodes
  become: true
  hosts: etcd
  tasks:
    - name: Include kube-node-common role
      include_role:
        name: kube-node-common
      when: not etcd_on_control_plane | bool
  tags:
    - kube-node-common
