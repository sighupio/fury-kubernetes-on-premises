# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# FIXME: Skipping for the moment, we need to add the license header to all the files.
# name: license
# kind: pipeline
# type: docker

# steps:
#   - name: check
#     image: docker.io/library/golang:1.16
#     pull: always
#     commands:
#       - go get -u github.com/google/addlicense
#       - addlicense -c "SIGHUP s.r.l" -v -l bsd -y "2017-present" --check .

# ---
name: policeman
kind: pipeline
type: docker

# FIXME: enable me when license check gets enabled.
# depends_on:
#  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
      # Shellcheck gets confused with Jinja2 tempalates. Skipping all of them
      FILTER_REGEX_EXCLUDE: (roles/.*/templates/.*j2)
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/vsphere-cm > vsphere-cm.yaml
      - kustomize build katalog/vsphere-csi > vsphere-csi.yaml

  - name: check-deprecated-apis
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect vsphere-cm.yaml --target-versions=k8s=v1.25.0 --ignore-deprecations
      - /pluto detect vsphere-csi.yaml --target-versions=k8s=v1.25.0 --ignore-deprecations

# FIXME: Add E2E tests
# ---
# name: e2e-kubernetes-1.25
# kind: pipeline
# type: docker

# depends_on:
#   - policeman

# node:
#   runner: internal

# platform:
#   os: linux
#   arch: amd64

# trigger:
#   ref:
#     include:
#       - refs/heads/master
#       - refs/heads/main
#       - refs/tags/**

# steps:
#   - name: init
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.25.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [clone]
#     settings:
#       action: custom-cluster-125
#       pipeline_id: cluster-125
#       local_kind_config_path: katalog/tests/kind/config.yml
#       cluster_version: "1.25.3"
#       instance_path: /shared
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password

#   - name: e2e
#     # KUBECTL 1.25.3 - KUSTOMIZE 3.5.3 - HELM 3.1.1 - YQ 4.21.1 - ISTIOCTL 1.9.4 - FURYCTL 0.9.0 - BATS 1.1.0
#     image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [init]
#     commands:
#       - export KUBECONFIG=/shared/kube/kubeconfig-125
#       - bats -t katalog/tests/gatekeeper.sh

#   - name: destroy
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.25.3
#     pull: always
#     depends_on: [e2e]
#     settings:
#       action: destroy
#       pipeline_id: cluster-125
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password
#     when:
#       status:
#         - success
#         - failure

# volumes:
#   - name: shared
#     temp: {}

---
name: release
kind: pipeline
type: docker

# FIXME: enable when we have e2e working
depends_on:
  # - e2e-kubernetes-1.25
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-on-premises-${DRONE_TAG}.tar.gz katalog/ roles/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-on-premises-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-on-premises-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
