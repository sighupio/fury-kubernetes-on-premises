# - name: getting etcd and role dependencies
#   apt:
#     name:
#       - tar
#       - git
#       - curl
#     state: present

- name: Making sure directories are present
  file:
    path: "{{item}}"
    state: directory
  with_items:
    - "{{ etcd_config_dir }}"
    - "{{ etcd_data_dir }}"
    - "{{ etcd_certs_dir }}"

- name: Generating TLS certificates
  import_tasks: tls.yml

- name: Installing and configuring etcd
  import_tasks: install.yml

- name: Enabling and starting etcd
  systemd:
    name: etcd
    daemon_reload: yes
    enabled: yes
    state: started

- name: Set backup timestamp
  set_fact:
    backup_timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"

- name: Ensure etcd backup directory exists
  file:
    path: "{{ ansible_env.HOME }}/certs-backup/{{ backup_timestamp }}/etc-etcd-pki"
    state: directory
    mode: '0750'
  when: upgrade

- name: Backup etcd certificates
  copy:
    src: /etc/etcd/pki/
    dest: "{{ ansible_env.HOME }}/certs-backup/{{ backup_timestamp }}/etc-etcd-pki"
    remote_src: yes
  when: upgrade

- name: Renewing etcd certificates
  command: "{{ item }}"
  loop:
    - "kubeadm certs renew --cert-dir=/etc/etcd/pki apiserver-etcd-client --config=/etc/etcd/kubeadm-etcd.yml"
    - "kubeadm certs renew --cert-dir=/etc/etcd/pki etcd-healthcheck-client --config=/etc/etcd/kubeadm-etcd.yml"
    - "kubeadm certs renew --cert-dir=/etc/etcd/pki etcd-peer --config=/etc/etcd/kubeadm-etcd.yml"
    - "kubeadm certs renew --cert-dir=/etc/etcd/pki etcd-server --config=/etc/etcd/kubeadm-etcd.yml"
  when: upgrade

- name: Restarting etcd service
  systemd:
    name: etcd
    daemon_reload: yes
    state: restarted
  when: upgrade

- name: Distribute etcd certificates from etcd to control plane nodes
  import_tasks: distribute.yml
  when: not etcd_on_control_plane | bool
