---

- name: Update Package Cache 
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install dependencies
  package:
    name:
      - software-properties-common
      - psmisc
    state: latest
  when: ansible_os_family == 'Debian'

- name: Disabling SELinux state
  selinux:
    state: disabled
  when: ansible_os_family in ['RedHat', 'Rocky']

- name: disable firewalld
  systemd: name=firewalld enabled=no
  when: ansible_os_family in ['RedHat', 'Rocky']

- name: stop firewalld
  systemd: name=firewalld state=stopped
  ignore_errors: yes
  when: ansible_os_family in ['RedHat', 'Rocky']

- name: installing haproxy repo (Ubuntu)
  apt_repository:
    repo: 'ppa:vbernat/haproxy-{{ haproxy_version }}'
    state: present
  when: ansible_facts['distribution'] == "Ubuntu"

- name: installing haproxy repo (Debian)
  block:
    - name: Custom apt key
      get_url:
        url: https://haproxy.debian.net/bernat.debian.org.gpg
        dest: /usr/share/keyrings/haproxy.debian.net.gpg

    - name: Add source
      apt_repository:
        repo: 'deb "[signed-by=/usr/share/keyrings/haproxy.debian.net.gpg]" http://haproxy.debian.net {{ ansible_distribution_release }}-backports-{{ haproxy_version }} main'
        state: present
  when: ansible_facts['distribution'] == "Debian"

- name: Check if haproxy is already installed
  stat:
    path: /etc/haproxy/haproxy.cfg
  register: haproxy_installed

- name: Check the current state of haproxy service
  systemd:
    name: haproxy
    state: started
  register: haproxy_service
  failed_when: false
  changed_when: false

- name: actually installing haproxy
  package:
    name: 'haproxy'
    state: present

- name: copying configuration file
  copy:
    src: "{{playbook_dir}}/{{ haproxy_configuration_file }}"
    dest: /etc/haproxy/haproxy.cfg

- name: validating configuration
  command: "haproxy -c -- /etc/haproxy/haproxy.cfg"
  when: ansible_os_family == 'Debian'

- name: validating configuration
  command: "haproxy -f /etc/haproxy/haproxy.cfg -c"
  when: ansible_os_family in ['RedHat', 'Rocky']

- name: Ensure haproxy is enabled and running if installed
  systemd:
    name: haproxy
    enabled: yes
    state: started
  when: haproxy_installed.stat.exists and haproxy_service.status != 0

- name: Restart haproxy if not previously installed
  systemd:
    daemon_reload: yes
    name: haproxy
    enabled: yes
    state: restarted
  when: not haproxy_installed.stat.exists

- name: Reload haproxy if already installed and running
  systemd:
    name: haproxy
    state: reloaded
  when: haproxy_installed.stat.exists and haproxy_service.status == 0

- name: Check if port 6443 is open
  wait_for:
    host: "localhost"
    port: "6443"
    state: started
    delay: 0
    timeout: 30

- name: install keepalived for clustering
  package:
    name: keepalived
    state: present
  when: keepalived_cluster|bool

- name: copying configuration file
  template:
    src: "keepalived.conf.j2"
    dest: /etc/keepalived/keepalived.conf
  notify: reload keepalived
  when: keepalived_cluster|bool

- name: copying check api server script
  template:
    src: "check_apiserver.sh.j2"
    dest: /etc/keepalived/check_apiserver.sh
    owner: "{{ ansible_user }}"
    mode: u=rwx
  notify: reload keepalived
  when: keepalived_cluster|bool and keepalived_on_k8s_master|bool

- name: check keepalived configuration file for errors
  command: "keepalived --config-test"
  when: keepalived_cluster|bool

- name: starting keepalived service
  systemd:
    daemon_reload: yes
    name: keepalived
    enabled: yes
    state: started
  when: keepalived_cluster|bool
