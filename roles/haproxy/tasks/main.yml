---
- name: Update Package Cache
  ansible.builtin.apt:
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Install dependencies
  when: ansible_os_family == 'Debian'
  ansible.builtin.package:
    name:
      - software-properties-common
      - psmisc
    state: latest

- name: Disabling SELinux state
  when: ansible_os_family in ['RedHat', 'Rocky']
  ansible.posix.selinux:
    state: disabled

- name: Disable firewalld
  when: ansible_os_family in ['RedHat', 'Rocky']
  ansible.builtin.systemd:
    name: firewalld
    enabled: false

- name: Stop firewalld
  when: ansible_os_family in ['RedHat', 'Rocky']
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
  ignore_errors: true

# We need to add this repo because the distro repo has outdated versions
# https://github.com/haproxy/wiki/wiki/Packages
# unfortunately packages are not signed with gpg and there is no ARM support:
#   - https://github.com/zenetys/rpm-haproxy/issues/2
#   - https://github.com/zenetys/rpm-haproxy/issues/9

- name: Ensure /etc/yum.repos.d/ exists (RHEL)
  when: ansible_os_family in ['RedHat', 'Rocky']
  ansible.builtin.file:
    path: /etc/yum.repos.d/
    state: directory
    mode: "0755"

- name: Adding Zenetys HAProxy Repo (RHEL)
  when: ansible_os_family in ['RedHat', 'Rocky']
  ansible.builtin.yum_repository:
    name: zenetys
    description: Zenetys RPM Repo for HAProxy
    baseurl: "https://packages.zenetys.com/latest/redhat/$releasever/RPMS/$basearch"
    state: present

# We need to add this repos because the official repo has outdated versions
# https://github.com/haproxy/wiki/wiki/Packages
- name: Adding HAProxy PPA (Ubuntu)
  when: ansible_facts['distribution'] == "Ubuntu"
  ansible.builtin.apt_repository:
    repo: "ppa:vbernat/haproxy-{{ haproxy_package.Ubuntu.version }}"
    state: present

- name: Adding HAProxy Repository (Debian)
  when: ansible_facts['distribution'] == "Debian"
  block:
    - name: Get repo GPG key
      ansible.builtin.get_url:
        url: https://haproxy.debian.net/bernat.debian.org.gpg
        dest: /usr/share/keyrings/haproxy.debian.net.gpg.armored

    - name: Dearmor GPG key
      ansible.builtin.shell:
        cmd: "gpg --dearmor -o /usr/share/keyrings/haproxy.debian.net.gpg < /usr/share/keyrings/haproxy.debian.net.gpg.armored"
        creates: /usr/share/keyrings/haproxy.debian.net.gpg

    - name: Add repo source to Apt
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/haproxy.debian.net.gpg] http://haproxy.debian.net {{ ansible_distribution_release }}-backports-{{ haproxy_package.Debian.version }} main"
        state: present
        filename: haproxy

- name: Install HAProxy
  ansible.builtin.package:
    name: "{{ haproxy_package[ansible_facts['distribution']].name }}"
    state: present

- name: Copy configuration file
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/{{ haproxy_configuration_file }}"
    dest: /etc/haproxy/haproxy.cfg

- name: Validate configuration file
  ansible.builtin.command: "haproxy -f /etc/haproxy/haproxy.cfg -c"

- name: (Re)start HAProxy service
  ansible.builtin.systemd:
    daemon_reload: true
    name: haproxy
    enabled: true
    state: restarted

- name: Wait for port 6443 to be started
  ansible.builtin.wait_for:
    host: "localhost"
    port: "6443"
    state: started
    delay: 0
    timeout: 30

- name: Install keepalived for HA clustering
  when: keepalived_cluster|bool
  ansible.builtin.package:
    name: keepalived
    state: present

- name: Copy keepliaved configuration file
  when: keepalived_cluster|bool
  ansible.builtin.template:
    src: "keepalived.conf.j2"
    dest: /etc/keepalived/keepalived.conf
  notify: reload keepalived

- name: Copy check api server script
  when: keepalived_cluster|bool and keepalived_on_k8s_master|bool
  ansible.builtin.template:
    src: "check_apiserver.sh.j2"
    dest: /etc/keepalived/check_apiserver.sh
    owner: "{{ ansible_user }}"
    mode: u=rwx
  notify: reload keepalived

- name: Check keepalived configuration file for errors
  when: keepalived_cluster|bool
  ansible.builtin.command: "keepalived --config-test"

- name: Start keepalived service
  when: keepalived_cluster|bool
  ansible.builtin.systemd:
    daemon_reload: true
    name: keepalived
    enabled: true
    state: started
