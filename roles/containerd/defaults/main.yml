---
# Package options.

# Check supported Kubernetes versions here: https://containerd.io/releases/#kubernetes-support
containerd_version: "{{ versions[kubernetes_version].containerd_version }}"
containerd_download_url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-{{ host_architecture }}.tar.gz"
containerd_bin_dir: "/usr/local/bin"
# runc version from here: https://github.com/containerd/containerd/blob/main/docs/RUNC.md -> https://github.com/containerd/containerd/blob/main/script/setup/runc-version
runc_version: "{{ versions[kubernetes_version].runc_version }}"
runc_bin_dir: "/usr/local/bin"
runc_download_url: "https://github.com/opencontainers/runc/releases/download/{{ runc_version }}/runc.{{ host_architecture }}"
runc_checksum: "sha256:https://github.com/opencontainers/runc/releases/download/{{ versions[kubernetes_version].runc_version }}/runc.sha256sum"

# Customize versions based on Kubernetes version to maintain compatibility
kubernetes_version: "1.29.3"
# Resgistry where to pull the pause (sandbox) image. We use the same name used in other roles for simplicity.
# Upstream registry is "k8s.gcr.io"
kubernetes_image_registry: "registry.sighup.io/fury/on-premises"

versions:
  1.24.7:
    containerd_version: "1.6.28"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.24.16:
    containerd_version: "1.6.28"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.25.6:
    containerd_version: "1.6.28"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.25.12:
    containerd_version: "1.6.28"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.26.3:
    containerd_version: "1.7.13"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.26.7:
    containerd_version: "1.7.13"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.27.6:
    containerd_version: "1.7.13"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.28.7:
    containerd_version: "1.7.13"
    runc_version: "v1.1.12"
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.2" # using 3.2 because we had it hardcoded before.
  1.29.3:
    containerd_version: "1.7.13"
    runc_version: "v1.1.12"
    # containerd defaults to `pause:3.8` for version 1.7.13, see:
    # https://github.com/containerd/containerd/blob/v1.7.13/pkg/cri/config/config_unix.go#L96
    # but `kubeadm config images list` (for kubeadm v1.29.2) points to pause:3.9,
    # so prefering that version because:
    #   1. kubeadm will pull this image anyway when initiating
    #   2. kubeadm will instruct the kubelet that this image should not be garbage collected.
    #   Ref: https://github.com/kubernetes/kubeadm/issues/2020
    sandbox_image: "{{ kubernetes_image_registry }}/pause:3.9"

# Service options.
containerd_service_state: started
containerd_service_enabled: true

# Write a default containerd config.toml file.
containerd_default_config: false
containerd_config_default_write: true
containerd_cfg_dir: /etc/containerd

## CONTAINERD TOML SETTINGS

containerd_storage_dir: "/var/lib/containerd"
containerd_state_dir: "/run/containerd"
containerd_systemd_dir: "/etc/systemd/system/containerd.service.d"
containerd_oom_score: 0

containerd_grpc_max_recv_message_size: 16777216
containerd_grpc_max_send_message_size: 16777216
containerd_debug_level: "info"

containerd_metrics_address: ""
containerd_metrics_grpc_histogram: false

containerd_max_container_log_line_size: 16384

# Kernel modules.
containerd_modprobe:
  - { state: "present", option: "br_netfilter" }
  - { state: "present", option: "overlay" }

# Entries for sysctl.
containerd_sysctl:
  - {
      state: "present",
      name: "net.bridge.bridge-nf-call-ip6tables",
      value: "1",
    }
  - { state: "present", name: "net.bridge.bridge-nf-call-iptables", value: "1" }
  - { state: "present", name: "net.ipv4.ip_forward", value: "1" }

# Enable nvidia container toolkit

containerd_nvidia_enabled: false

# Registry Auth Configuration
# You can add authentication details for registries and containerd will
# automatically authenticate against them when pulling the images.
# Notice that this will be deprecated in containerd v2:
# https://github.com/containerd/containerd/blob/v1.7.0/docs/cri/registry.md#configure-registry-credentials
containerd_registry_configs:
# configuration must use the following format:
#   - {registry: "myregistry:8080", username: "admin", password: "password", insecure_skip_verify=false, mirror_endpoint: ["http://myregistry:8080"]}
