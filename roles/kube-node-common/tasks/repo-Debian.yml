---
- name: Remove deprecated Kubernetes APT repository
  apt_repository:
    filename: "{{ kubernetes_repo_deprecated['name'] }}"
    repo: "{{ kubernetes_repo_deprecated['apt_repo'] }}"
    state: absent

- name: Install apt-transport-https
  apt:
    name: apt-transport-https
    state: latest

- name: Add Kubernetes APT repository
  vars:
    gpg_key: "{{ dependencies_override.apt.gpg_key | default(dependencies[kubernetes_version].apt.gpg_key) }}"
    gpg_key_id: "{{ dependencies_override.apt.gpg_key_id | default(dependencies[kubernetes_version].apt.gpg_key_id) }}"
    gpg_keyrings_path: "/etc/apt/keyrings" # use default apt keyrings path
    apt_sources_dir: "/etc/apt/sources.list.d" # use default apt sources path
    filename: "{{ dependencies_override.apt.name | default('kfd-repos') }}"
    repo: "{{ dependencies_override.apt.repo | default(dependencies[kubernetes_version].apt.repo) }}"
  block:
    - name: Remove old repositories
      loop: "{{ dependencies.keys() }}"
      ansible.builtin.file:
        path: "{{ apt_sources_dir }}/{{ dependencies[item].apt.name }}.list"
        state: absent
      when: dependencies[item].apt is defined and dependencies[item].apt.name is defined

    - name: Remove old APT signing key
      ansible.builtin.apt_key:
        id: "{{ gpg_key_id }}"
        state: absent

    - name: Ensure keyring directory exists
      file:
        path: "{{ gpg_keyrings_path }}"
        state: directory

    - name: Import Kubernetes APT public key
      ansible.builtin.get_url:
        url: "{{ gpg_key }}"
        dest: "/tmp/kubernetes-apt-keyring.gpg.armored"
        force: true # always download the latest remote key to avoid expiration of the local one

    - name: Dearmor GPG key
      block:
        - file:
            path: "{{ gpg_keyrings_path }}/kubernetes-apt-keyring.gpg"
            state: absent # if the file already exists, the dearmor process fails
        - ansible.builtin.shell:
            cmd: "gpg --dearmor -o {{ gpg_keyrings_path }}/kubernetes-apt-keyring.gpg < /tmp/kubernetes-apt-keyring.gpg.armored"

    - name: Add repo source to APT
      ansible.builtin.apt_repository:
        filename: "{{ filename }}"

        # syntax: "[type] [signature] <url> <suite> [component]"
        # examples:
        # - "deb https://my-repo.example.com/deb/ /"
        # - "http://my-repo.example.com oracular main"

        # NB: we closely follow the recommended installation instructions provided by Kubernetes:
        #     https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl
        # NB: the only allowed [type] is "deb". Anything else is discarded and replaced with "deb"
        # NB: the [signature] value is currently ignored and statically replaced with "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
        repo: "{{ repo | regex_replace('^(?P<type>deb)?\\ ?(?P<signature>\\[signed-by=\\S+\\])?\\ ?(?P<url>https?://\\S+)\\ (?P<suite>\\S+)\\ ?(?P<component>\\S+)?$', 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] \\g<url> \\g<suite> \\g<component>') }}"
        state: present

    - name: Add disclaimer in repository file
      ansible.builtin.blockinfile:
        append_newline: true
        block: "# This file is managed by the On Premises installer of the Kubernetes Fury Distribution.\n# Do not manually edit this file. Content will be replaced each time you run the installer."
        insertbefore: BOF
        marker: "##### KFD MANAGED FILE {mark} #####"
        marker_begin: "- DISCLAIMER START"
        marker_end: "- DISCLAIMER END"
        path: "{{ apt_sources_dir }}/{{ filename }}.list"
      
    - name: Update APT cache
      apt:
        update_cache: true
      changed_when: false
